variables:
  GCOV: "/usr/bin/gcov-5"
  EXTRA_MODULES: "tls,pkcs11,xts"
  SOFTHSM2_CONF_LINUX: "/home/gitlab-runner/softhsm2.conf"
  SOFTHSM2_LIB_LINUX:  "/home/gitlab-runner/SoftHSMv2-inst/lib/softhsm/libsofthsm2.so"

coverage:
  script:
    - export CC=gcc
    - export CXX=g++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --with-coverage --cc="$CC" --cc-bin="$CXX" --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
    - lcov --gcov-tool "$GCOV" --directory . --capture --output-file coverage.info
    - lcov --gcov-tool "$GCOV" --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info
    - lcov --gcov-tool "$GCOV" --list coverage.info
    - genhtml coverage.info --output-directory html
  artifacts:
    paths:
      - html
  tags:
    - ubuntu
    - x64
  except:
    - tags

build-linux-all-shared-gcc:
  script:
    - export CC=gcc
    - export CXX=g++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --cc="$CC" --cc-bin="$CXX" --with-bzip2 --with-lzma --with-openssl --with-sqlite --with-zlib --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
  tags:
    - ubuntu
    - x64
  except:
    - tags

build-linux-all-shared-clang:
  script:
    - export CC=clang
    - export CXX=clang++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --cc="$CC" --cc-bin="$CXX" --with-bzip2 --with-lzma --with-openssl --with-sqlite --with-zlib --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
  tags:
    - ubuntu
    - x64
  except:
    - tags

build-linux-all-static-gcc:
  script:
    - export CC=gcc
    - export CXX=g++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --disable-shared --cc="$CC" --cc-bin="$CXX" --with-bzip2 --with-lzma --with-openssl --with-sqlite --with-zlib --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
  tags:
    - ubuntu
    - x64
  except:
    - tags

build-linux-all-static-clang:
  script:
    - export CC=clang
    - export CXX=clang++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --disable-shared --cc="$CC" --cc-bin="$CXX" --with-bzip2 --with-lzma --with-openssl --with-sqlite --with-zlib --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
  tags:
    - ubuntu
    - x64
  except:
    - tags

build-linux-all-shared-gcc-32bit-cross:
  script:
    - export CC=gcc
    - export CXX=g++
    - $CXX --version
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --cpu="x86" --cc-abi-flags="-m32" --cc="$CC" --cc-bin="$CXX" --with-bzip2 --with-lzma --with-openssl --with-sqlite --with-zlib --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
  tags:
    - ubuntu
    - x64
  except:
    - tags

asan-ubsan:
  script:
    - export CC=gcc
    - export CXX=g++
    - $CXX --version
    - export ASAN_OPTIONS=check_initialization_order=true
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --cc-abi-flags="-D_GLIBCXX_DEBUG -fsanitize=address,undefined -fno-sanitize-recover=undefined" --with-debug-info --cc="$CC" --cc-bin="$CXX" --prefix=/tmp/botan-installation
    - make -j 4
    - ./botan-test
    - ./botan-test --pkcs11-lib="$SOFTHSM2_LIB_LINUX" pkcs11
  tags:
    - ubuntu
    - x64
  except:
    - tags

linux-shared-clang-analyzer:
  script:
    - export CC=clang
    - export CXX=clang++
    - $CXX --version
    - ./configure.py --cc="$CC" --cc-bin="$CXX" --prefix=/tmp/botan-installation --module-policy=bsi --enable-modules=$EXTRA_MODULES --with-debug-info --with-static-analysis
    - make -j 4
  tags:
    - ubuntu
    - x64
  except:
    - tags 
  allow_failure: true

build-windows-shared-vs2013:
  script:
    - set OLDDIR=%CD%
    - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86
    - chdir /d %OLDDIR%
    - python configure.py --module-policy=bsi --enable-modules=%EXTRA_MODULES% --cc=msvc --cpu=x86
    - jom
    - botan-test.exe
    - botan-test.exe --pkcs11-lib=C:\SoftHSMv2-x86-VS2015\softhsm2.dll pkcs11
  tags:
    - windows7
    - x64
  except:
    - tags

build-windows-static-vs2013:
  script:
    - set OLDDIR=%CD%
    - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86
    - chdir /d %OLDDIR%
    - python configure.py --module-policy=bsi --enable-modules=%EXTRA_MODULES% --cc=msvc --cpu=x86 --disable-shared
    - jom
    - botan-test.exe
    - botan-test.exe --pkcs11-lib=C:\SoftHSMv2-x86-VS2015\softhsm2.dll pkcs11
  tags:
    - windows7
    - x64
  except:
    - tags

build-windows-static-vs2015:
  script:
    - set OLDDIR=%CD%
    - call "%ProgramFiles(x86)%\Microsoft Visual C++ Build Tools\vcbuildtools.bat" x86
    - chdir /d %OLDDIR%
    - python configure.py --module-policy=bsi --enable-modules=%EXTRA_MODULES% --cc=msvc --cpu=x86 --disable-shared
    - jom
    - botan-test.exe
    - botan-test.exe --pkcs11-lib=C:\SoftHSMv2-x86-VS2015\softhsm2.dll pkcs11
  tags:
    - windows7
    - x64
  except:
    - tags

build-windows-shared-vs2015-with-analysis:
  script:
    - set OLDDIR=%CD%
    - call "%ProgramFiles(x86)%\Microsoft Visual C++ Build Tools\vcbuildtools.bat" x86
    - chdir /d %OLDDIR%
    - python configure.py --cc=msvc --cpu=x86 --module-policy=bsi --enable-modules=%EXTRA_MODULES% --with-static-analysis
    - jom
    - botan-test.exe
    - botan-test.exe --pkcs11-lib=C:\SoftHSMv2-x86-VS2015\softhsm2.dll pkcs11
  tags:
    - windows7
    - x64
  except:
    - tags

windows-cppcheck:
  script:
    - python configure.py --cc=msvc --cpu=x86 --module-policy=bsi --enable-modules=%EXTRA_MODULES% --write-sources-to-file
    - call "C:\Program Files\Cppcheck\cppcheck.exe" --file-list=sources-list.txt --enable=all -I build\include -q --include=build\include\botan\build.h -f
  tags:
    - windows7
    - x64
  except:
    - tags

ios-32bit:
  script:
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --disable-shared --via-amalgamation --cpu=armv7 --cc=clang --cc-abi-flags="-arch armv7 -arch armv7s -stdlib=libc++" --prefix=/tmp/botan-installation
    - xcrun --sdk iphoneos make -j 2
  tags:
    - osx10.11
    - ios9.3
    - xcode7.3
  except:
    - tags

ios-64bit:
  script:
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --disable-shared --via-amalgamation --cpu=armv8-a --cc=clang --cc-abi-flags="-arch arm64 -stdlib=libc++" --prefix=/tmp/botan-installation
    - xcrun --sdk iphoneos make -j 2
  tags:
    - osx10.11
    - ios9.3
    - xcode7.3
  except:
    - tags

osx:
  script:
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --prefix=/tmp/botan-installation
    - make -j 2
    - ./botan-test
    - ./botan-test --pkcs11-lib=/usr/local/lib/softhsm/libsofthsm2.so pkcs11
  tags:
    - osx10.11
    - xcode7.3
  except:
    - tags

android-32bit:
  script:
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --os=android --cpu=armv7 --cc=clang
    - ./build_android_mk.sh /home/gitlab-runner/pkcs11 armeabi-v7a
    - export APP_PROJECT_PATH=`pwd`
    - /home/gitlab-runner/android-ndk-r12b/ndk-build NDK_APPLICATION_MK=botan.mk -j4
  tags:
    - ubuntu
    - x64
  except:
    - tags

android-64bit:
  script:
    - ./configure.py --module-policy=bsi --enable-modules=$EXTRA_MODULES --os=android --cpu=arm64 --cc=clang
    - ./build_android_mk.sh /home/gitlab-runner/pkcs11 arm64-v8a
    - export APP_PROJECT_PATH=`pwd`
    - /home/gitlab-runner/android-ndk-r12b/ndk-build NDK_APPLICATION_MK=botan.mk -j4
  tags:
    - ubuntu
    - x64
  except:
    - tags
