language: cpp
os: linux
dist: focal
compiler: gcc

jobs:
  include:
    - name: Coverage (GCC)
      env:
       - TARGET="coverage"
       - CCACHE_MAXSIZE=2G
       - PKCS11_LIB=/usr/lib/softhsm/libsofthsm2.so

    - name: Fuzzers (GCC)
      arch: arm64
      env:
       - TARGET="fuzzers"

    - name: Valgrind (GCC)
      env:
       - TARGET="valgrind"
       - CCACHE_MAXSIZE=2G

    - name: Linux s390x (GCC)
      arch: s390x
      env:
       - TARGET="shared"

    - name: Linux ppc64le (GCC)
      arch: ppc64le
      env:
       - TARGET="shared"

    - name: Linux arm64 (GCC)
      arch: arm64
      env:
       - TARGET="shared"

    - name: Linux arm32 cross (GCC)
      arch: arm64
      env:
       - TARGET="cross-arm32"

    - name: Linux x86_64 (Clang)
      compiler: clang
      env:
       - TARGET="shared"

    - name: macOS x86_64 (XCode Clang)
      os: osx
      osx_image: xcode12.2
      compiler: clang
      env:
       - TARGET="shared"

    - name: iOS arm64 (XCode Clang)
      os: osx
      osx_image: xcode12.2
      compiler: clang
      env:
       - TARGET="cross-arm64"

    - name: Android arm32 cross (NDK Clang)
      compiler: clang
      env:
       - TARGET="cross-android-arm32"
       - ANDROID_NDK=android-ndk-r21d

    - name: Android arm64 cross (NDK Clang)
      compiler: clang
      env:
       - TARGET="cross-android-arm64"
       - ANDROID_NDK=android-ndk-r21d

    - name: MinGW x86-64 cross (GCC)
      env:
       - TARGET="cross-win64"

    - name: Linux i386 cross (GCC)
      env:
       - TARGET="cross-i386"

    - name: Minimized
      arch: arm64
      env:
       - TARGET="mini-shared"

    - name: Baremetal (GCC)
      arch: arm64
      env:
       - TARGET="baremetal"

    - name: BSI policy
      arch: arm64
      env:
       - TARGET="bsi"

    - name: Pylint
      arch: arm64
      dist: bionic
      env:
       - TARGET="lint"

install:
  - ./src/scripts/ci/setup_travis.sh

script:
  - ./src/scripts/ci_build.py --os=$TRAVIS_OS_NAME --cc=$CC --cc-bin=$CXX --without-pylint3 --pkcs11-lib=$PKCS11_LIB $EXTRA_FLAGS $TARGET

# whitelist branches to avoid testing feature branches twice (as branch and as pull request)
branches:
  only:
    - master
    - release-2
    - coverity_scan

git:
  depth: 10

cache:
  ccache: true

addons:
  coverity_scan:
    project:
      name: "randombit/botan"
    notification_email: jack@randombit.net
    build_command_prepend: "./configure.py --no-optimizations --with-zlib --with-openssl"
    build_command: "make -j2"
    branch_pattern: coverity_scan
